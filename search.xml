<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[对误差-输入语言下的极限定义的理解]]></title>
    <url>%2F2018%2F03%2F08%2Fthe-inpret-of-epsilon-delta-language%2F</url>
    <content type="text"><![CDATA[在大一刚刚开始学高数上册的时候，老师直接把一大坨看不懂地符号加上文字的极限定义甩过来，要求记住。当时就对$\epsilon-\delta$定义的极限不是很理解，只记住了一个极限是趋近过程中的近似，对极限本身的概念非常模糊。在考研的准备过程中，逐渐对极限这个概念有了一定的理解，并对$\epsilon-\delta$语言有了形象的认知。于是将自己的理解整理成文章，希望能帮助同样对极限理解不清晰的朋友明晰这个概念。 极限的诞生16世纪西方社会是思想与科学技术的爆发时期。科学，生产，技术中出现许多问题。关于怎么求瞬时速度，曲边形面积等数学问题大量涌出，困扰着当时的数学家。由此，为了解决这些问题，引入了极限这个概念。 极限定义的发展粗略的描述最初对极限的定义很模糊，当描述 ${\lim_{x \to x_0}f(x)=A}$ 时，只有对其的描述，而非定义： 若${\lim_{x \to x_0}f(x)=A}$，即在$x$趋于$x_0$的过程中，$f(x)$与$A$的距离要多小有多小 对于数学来说，这是不可接受的，作为微积分学的基础概念，必须有严格的数学语言定义。 清晰的定义柯西提出了极限的清晰定义：如果一个函数的极限为A，那么任意给定一个足够小的$\epsilon$&gt;0，都有$|f(x)-A|&lt;\epsilon$成立。 完整的定义德国数学家维尔斯特拉斯对柯西的定义进一步加工，于是有了今天的$\epsilon-\delta$定义。 对$\epsilon-\delta$定义的理解误差-输入语言所谓$\epsilon-\delta$语言，就是我们的误差-输入语言。从柯西的极限定义出发，要描述函数值与极限距离要多小有多小的状态，我们可以任意给出一个误差值，如果可以找到一个邻域，使得函数值与极限之间的偏移量不超过给定的误差值。当我们要求的误差越来越小时，函数值与极限的距离也就越来越近，精准地描述了距离要多小有多小这个自然语言的描述。 举例对于${\lim_{x \to 2}}{x-2}=0$，当要求x-2与0的误差为0.01，即|x-2|&lt;0.01，取$\delta$=0.01，能满足x-2与0的距离的偏移量不超过0.01。当我们给定的$\epsilon$值越来越小时，邻域也在渐渐的缩小以满足给定的误差。 在极限的证明中，通常做法是找用$\epsilon$的式子来表示的$\delta$，如$\delta=\frac{\epsilon}{5}$,来证明无论$\epsilon$取什么值，都有对应的$\delta$存在，与误差-输入的思想不谋而合。 参考文章 百度文库-极限的历史发展 狮子数学17版o级课程第13讲]]></content>
      <categories>
        <category>数学</category>
      </categories>
      <tags>
        <tag>极限</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[写博客的目的记录进步在建立博客的过程中，无意中点进了一位同样是跨专业考研的朋友的博客，翻开时间线，里面记录了他从爬虫学起一直到精通python的每一步。这也激发了我记录的热情，同样作为一名想要跨专业考研的学生，也想要记录下自己从会计到计算机的大跨步。 为考研复试作准备 由于是跨专业考研，在复试中可能没有什么值得讲的经历和项目实践，于是想到通过记录自己在备考过程中对数学与计算机的思考，写成文章，表示自己对计算机学科的认真和热情。 输出知识知识总是要输出才能消化，在把想法落成文字的过程中，要求每一步都能说服自己，把之前逻辑不通的地方理清；还要求能以简洁的说法来讲解复杂的例子，更能提高自己对知识本质的认识。 内容 数学 计算机 杂谈 期望每天都有进步。]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
  </entry>
</search>
